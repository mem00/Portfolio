{"version":3,"sources":["Components/Header.js","Components/Links.js","Components/About.js","Components/Projects.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Links","Grid","container","justify","Button","color","react_router_dom","to","useStyles","makeStyles","card","width","grid","padding","About","classes","Card","CardContent","paddingTop","Projects","direction","alignItems","spacing","item","target","rel","href","Contact","App","Components_Header","Components_Links","react_router","exact","path","render","Components_About","Components_Projects","Components_Contact","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97417743.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n \n    return (\n        <div className=\"header\">\n          <h1 className='title'>Michael McGuire</h1>\n          <h3 className='sub-header'>Software Engineer</h3>\n        </div>\n    );\n  }\n  \n  export default Header;\n  ","import React from 'react';\nimport {Link } from \"react-router-dom\"\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\n\nfunction Links() {\n\n  return (\n    <Grid container justify=\"center\">\n        <Button color=\"primary\"><Link to=\"/\">About Me</Link></Button>\n        <Button color=\"primary\"><Link to=\"/projects\">Projects</Link></Button>\n        <Button color=\"primary\"><Link to=\"/contact\">Contact Me</Link></Button>\n    </Grid>\n  );\n}\n\nexport default Links;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    card: {\n      width: '600px'\n    },\n    grid: {\n      padding: '30px'\n   }\n})\n\nfunction About() {\n    const classes = useStyles()\n  return (\n    <Grid container justify=\"center\" className={classes.grid}>\n        <Card className={classes.card}>\n        <CardContent>\n        <div className=\"content\">I am a job searching software engineer.</div>\n        <div className=\"content\"> A.B. Cognitive Science, University of Geogia.</div>\n        <div className=\"content\">Software Engineering Immersive, General Assembly, NYC.</div>\n        <div className=\"content\">I am looking for an opportunity to learn and contribute in a full-stack position.</div>\n        </CardContent>\n        </Card>\n    </Grid>\n  );\n}\n\nexport default About;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    card: {\n      width: '420px',\n    },\n    grid:{\n        paddingTop: '30px'\n    }\n})\n\nfunction Projects() {\n    const classes = useStyles()\n  return (\n \n    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.grid} spacing={3}>\n       <Grid item>\n            <Card className={classes.card}>\n                <CardContent>\n                    <div className=\"content-title\">CurArt</div>\n                    <div className=\"content\">React, CSS Flexbox, Met API</div>\n                    <div className=\"content\">Load art from the Met Collection, save your favorites, and continue!</div>\n                    <div className=\"content\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://broken-thought.surge.sh/\">View Here</a></div>\n                </CardContent>\n            </Card>\n        </Grid> \n    \n        <Grid item>\n            <Card className={classes.card}>\n                <CardContent>\n                    <div className=\"content-title\">Gift Me</div>\n                    <div className=\"content\">PSQL, Express, Sequelize, React, Material UI</div>\n                    <div className=\"content\">Full CRUD application. Add items and events to your wish list. Friends and family\n                    can find your wish list by your email.</div>\n                    <div className=\"content\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://giftme-hjm.herokuapp.com/\">View Here</a></div>\n                </CardContent>\n            </Card>\n        </Grid>\n        <Grid item>\n            <Card className={classes.card}>\n                <CardContent>\n                    <div className=\"content-title\">Convey</div>\n                    <div className=\"content\">PSQL, Ruby on Rails, Action Cable, React, Material UI</div>\n                    <div className=\"content\">Direct messaging app using WebSockets. Sign up and message me! (username: mem) </div>\n                    <div className=\"content\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://convey-messenger.herokuapp.com/\">View Here</a></div>\n                </CardContent>\n            </Card>\n        </Grid>\n    </Grid>\n  );\n}\n\nexport default Projects;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    card: {\n      width: '300px',\n    },\n    grid:{\n       padding: '30px'\n    }\n})\n\nfunction Contact() {\n    const classes = useStyles()\n  return (\n \n    <Grid container justify=\"center\" className={classes.grid}>\n        <Card className={classes.card}>\n            <CardContent>\n                <div className=\"content\">203-505-4487</div>\n                <div className=\"content\">michael@mcguire.ch</div>\n                <div className=\"content\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/mem00\">GitHub</a></div>\n            </CardContent>\n        </Card>\n    </Grid>\n  );\n}\n\nexport default Contact;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Header from './Components/Header'\nimport Links from './Components/Links'\nimport About from './Components/About'\nimport Projects from './Components/Projects'\nimport Contact from './Components/Contact'\nimport Grid from '@material-ui/core/Grid'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n    <Grid container justify=\"center\">\n     \n        <Header/>\n        <Links/>\n        <Switch>\n          <Route exact path= \"/\" render={()=> <About/>}/>\n          <Route exact path= \"/projects\" render={()=> <Projects/>}/>\n          <Route exact path= \"/contact\" render={()=><Contact/>}/>\n        \n\n          \n        </Switch>\n   \n    </Grid>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}